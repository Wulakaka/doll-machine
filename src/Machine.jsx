/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useEffect, useMemo, useRef, useState} from 'react'
import { useGLTF } from '@react-three/drei'
import {useFrame} from "@react-three/fiber";
import {Physics, RigidBody} from "@react-three/rapier";
import Dolls from "./Dolls.jsx";
import Walls from "./Walls.jsx";

export function Machine(props) {
  const { nodes, materials } = useGLTF('/model.glb')

  const [rotationZ, setRotationZ] = useState(0);

  useFrame((state, delta) => {
    setRotationZ(state.clock.elapsedTime * 0.1)
  });

  // const clawARotation = useMemo(() => {
  //   return [0, 0, -0.611 + rotationZ]
  // }, [rotationZ])
  //



  return (
    <Physics debug={false} gravity={[0, -9.81, 0]}>
      <RigidBody>
        <mesh scale={[0.1, 0.1, 0.1]} position={[0, 2,0]}>
          <boxGeometry />
          <meshBasicMaterial color="red" />
        </mesh>
      </RigidBody>
      <group {...props} dispose={null}>
        <RigidBody type={"fixed"} colliders={"trimesh"}>
          <mesh
            name="floor"
            castShadow
            receiveShadow
            geometry={nodes.floor.geometry}
            material={materials['Material.001']}
            position={[0, 0.843, 0]}
          />
          <mesh
            name="glassA"
            castShadow
            receiveShadow
            geometry={nodes.glassA.geometry}
            material={materials.glass}
            position={[-0.137, 0.967, 0.319]}
          />
          <mesh
            name="glassB"
            castShadow
            receiveShadow
            geometry={nodes.glassB.geometry}
            material={materials.glass}
            position={[-0.315, 0.967, 0.129]}
            rotation={[0, -1.571, 0]}
          />
        </RigidBody>
        <mesh
          name="clawA"
          castShadow
          receiveShadow
          geometry={nodes.clawA.geometry}
          material={materials.arm}
          position={[0, 1.555, 0]}
          rotation={[0, 0, -0.611 + rotationZ]}
        />
        <mesh
          name="clawB"
          castShadow
          receiveShadow
          geometry={nodes.clawB.geometry}
          material={materials.arm}
          position={[0, 1.555, 0]}
          rotation={[Math.PI, Math.PI / 3, 2.531 + rotationZ]}
        />
        <mesh
          name="clawC"
          castShadow
          receiveShadow
          geometry={nodes.clawC.geometry}
          material={materials.arm}
          position={[0, 1.555, 0]}
          rotation={[Math.PI, -Math.PI / 3, 2.531 + rotationZ]}
        />
        <mesh
          name="Cube007"
          castShadow
          receiveShadow
          geometry={nodes.Cube007.geometry}
          material={materials.arm}
          position={[0, 1.73, 0]}
        />
      </group>

      <Walls />
      <Dolls/>
    </Physics>

  )
}

useGLTF.preload('/model.glb')
